@model IEnumerable<WebApplication1.Models.Testimony>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Request.Cookies["session"]["role"] == "Admin")
{
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("ENTRENA DB", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("Participants", "Index", "Participants")</li>
                    <li>@Html.ActionLink("Activities", "Index", "Activities")</li>
                    <li>@Html.ActionLink("Participation", "Index", "activities_participation")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    <li style="background-color:#800808">
                        @if ((Request.Cookies["session"]["ses"] == "1") || Request.IsAuthenticated)
                        {
                            @Html.ActionLink("Sign Out, " + Request.Cookies["session"]["user"], "Logout", "User")
                        }
                        else
                        {
                            @Html.ActionLink("Sign In", "Login", "User")
                        }
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table id="myTable" class="table">
        <tr>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.Participant.Participant_Name)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.Activity.Activity_Name)
            </th>
            <th onclick="sortTable(2)">
                @Html.DisplayNameFor(model => model.Testimony_Details)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>

                <td>
                    <a href="@Url.Action("Details", "Participants", new { Id = item.ParticipantID })" target="_blank">@Html.DisplayFor(modelItem => item.Participant.Participant_Whole_Name)</a>
                </td>
                <td>
                    <a href="@Url.Action("Details", "Activities", new { Id = item.ActivityID })" target="_blank">@Html.DisplayFor(modelItem => item.Activity.Activity_Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Testimony_Details)
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Testimony_ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Testimony_ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Testimony_ID })
                </td>
            </tr>
        }

    </table>
}

else
{
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("ENTRENA DB", "Login", "User", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    <li style="background-color:#800808">
                        @Html.ActionLink("Sign In", "Login", "User")
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="container">
        <h3>You  are not allowed to see this information. Please <a href="/user/login">Sign In</a> to continue.</h3>
    </div>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            //Set the sorting direction to ascending:
            dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("TR");
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 1; i < (rows.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
}
